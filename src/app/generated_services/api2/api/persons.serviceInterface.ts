/**
 * API de Reconhecimento Facial com InsightFace
 * API para reconhecimento facial que suporta imagens com várias pessoas usando InsightFace
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ErrorResponse } from '../model/models';
import { HTTPValidationError } from '../model/models';
import { PersonDetailResponse } from '../model/models';
import { PersonListResponse } from '../model/models';
import { RecognitionResponse } from '../model/models';
import { RegisterMultipleResponse } from '../model/models';
import { RegisterPersonResponse } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface PersonsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Add Person Images
     * Adiciona mais imagens a uma pessoa existente.  - **person_id**: ID da pessoa (UUID) - **images**: Lista de imagens contendo o rosto da pessoa (máximo 10)
     * @param personId 
     * @param images 
     */
    addPersonImagesApiV1PersonsPersonIdImagesPost(personId: string, images: Array<Blob>, extraHttpRequestParams?: any): Observable<{ [key: string]: any; }>;

    /**
     * Delete Person
     * Remove uma pessoa do sistema.  - **person_id**: ID da pessoa (UUID)  Executa um soft delete (marca como inativo).
     * @param personId 
     */
    deletePersonApiV1PersonsPersonIdDelete(personId: string, extraHttpRequestParams?: any): Observable<{ [key: string]: any; }>;

    /**
     * Get Person Details
     * Obtém detalhes de uma pessoa específica.
     * @param personId 
     */
    getPersonDetailsApiV1PersonsPersonIdGet(personId: string, extraHttpRequestParams?: any): Observable<PersonDetailResponse>;

    /**
     * List Persons
     * Lista todas as pessoas registradas no sistema.
     */
    listPersonsApiV1PersonsGet(extraHttpRequestParams?: any): Observable<PersonListResponse>;

    /**
     * Recognize Faces
     * Reconhece todas as faces presentes na imagem.  - **image**: Imagem para análise - **draw_boxes**: Se verdadeiro, retorna a imagem com caixas desenhadas ao redor das faces  Retorna a lista de faces encontradas com seus nomes e posições.
     * @param image 
     * @param drawBoxes 
     */
    recognizeFacesApiV1RecognizePost(image: Blob, drawBoxes?: boolean, extraHttpRequestParams?: any): Observable<RecognitionResponse>;

    /**
     * Register Multiple Photos
     * Registra múltiplas fotos da mesma pessoa para melhor reconhecimento.  - **name**: Nome da pessoa - **images**: Lista de imagens contendo o rosto da pessoa - **person_id**: ID opcional da pessoa (UUID)  Retorna informações da pessoa registrada com múltiplas fotos.
     * @param name 
     * @param images 
     * @param personId 
     */
    registerMultiplePhotosApiV1RegisterMultiplePost(name: string, images: Array<Blob>, personId?: string, extraHttpRequestParams?: any): Observable<RegisterMultipleResponse>;

    /**
     * Register Person
     * Registra uma nova pessoa no sistema.  - **name**: Nome da pessoa - **image**: Imagem contendo o rosto da pessoa - **person_id**: ID opcional da pessoa (UUID)  Retorna o ID único da pessoa registrada.
     * @param name 
     * @param image 
     * @param personId 
     */
    registerPersonApiV1RegisterPost(name: string, image: Blob, personId?: string, extraHttpRequestParams?: any): Observable<RegisterPersonResponse>;

    /**
     * Remove Person Image
     * Remove uma imagem específica de uma pessoa.  - **person_id**: ID da pessoa (UUID) - **image_id**: ID da imagem a ser removida  Nota: Não é possível remover a única imagem de uma pessoa. Se a imagem removida for a primária, outra imagem será automaticamente definida como primária.
     * @param personId 
     * @param imageId 
     */
    removePersonImageApiV1PersonsPersonIdImagesImageIdDelete(personId: string, imageId: number, extraHttpRequestParams?: any): Observable<{ [key: string]: any; }>;

}
